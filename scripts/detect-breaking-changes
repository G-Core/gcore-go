#!/usr/bin/env bash

set -e

cd "$(dirname "$0")/.."

echo "==> Detecting breaking changes"

TEST_PATHS=(
	client_test.go
	cloud/project_test.go
	cloud/task_test.go
	cloud/region_test.go
	cloud/quota_test.go
	cloud/quotarequest_test.go
	cloud/secret_test.go
	cloud/sshkey_test.go
	cloud/iprange_test.go
	cloud/loadbalancer_test.go
	cloud/loadbalancerl7policy_test.go
	cloud/loadbalancerl7policyrule_test.go
	cloud/loadbalancerflavor_test.go
	cloud/loadbalancerlistener_test.go
	cloud/loadbalancerpool_test.go
	cloud/loadbalancerpoolhealthmonitor_test.go
	cloud/loadbalancerpoolmember_test.go
	cloud/loadbalancermetric_test.go
	cloud/loadbalancerstatus_test.go
	cloud/reservedfixedip_test.go
	cloud/reservedfixedipvip_test.go
	cloud/network_test.go
	cloud/networksubnet_test.go
	cloud/networkrouter_test.go
	cloud/volume_test.go
	cloud/floatingip_test.go
	cloud/securitygroup_test.go
	cloud/securitygrouprule_test.go
	cloud/userroleassignment_test.go
	cloud/inference_test.go
	cloud/inferenceflavor_test.go
	cloud/inferencemodel_test.go
	cloud/inferencedeployment_test.go
	cloud/inferencedeploymentlog_test.go
	cloud/inferenceregistrycredential_test.go
	cloud/inferencesecret_test.go
	cloud/placementgroup_test.go
	cloud/baremetalimage_test.go
	cloud/baremetalflavor_test.go
	cloud/baremetalserver_test.go
	cloud/registry_test.go
	cloud/registryrepository_test.go
	cloud/registryartifact_test.go
	cloud/registrytag_test.go
	cloud/registryuser_test.go
	cloud/fileshare_test.go
	cloud/fileshareaccessrule_test.go
	cloud/billingreservation_test.go
	cloud/gpubaremetalcluster_test.go
	cloud/gpubaremetalclusterinterface_test.go
	cloud/gpubaremetalclusterserver_test.go
	cloud/gpubaremetalclusterflavor_test.go
	cloud/gpubaremetalclusterimage_test.go
	cloud/instance_test.go
	cloud/instanceflavor_test.go
	cloud/instanceinterface_test.go
	cloud/instanceimage_test.go
	cloud/instancemetric_test.go
	cloud/auditlog_test.go
	waap/waap_test.go
	waap/statistic_test.go
	waap/domain_test.go
	waap/domainsetting_test.go
	waap/domainapipath_test.go
	waap/domainapipathgroup_test.go
	waap/domainapidiscovery_test.go
	waap/domainapidiscoveryscanresult_test.go
	waap/domaininsight_test.go
	waap/domaininsightsilence_test.go
	waap/domainpolicy_test.go
	waap/domainanalytics_test.go
	waap/domainanalyticsrequest_test.go
	waap/domaincustomrule_test.go
	waap/domainfirewallrule_test.go
	waap/domainadvancedrule_test.go
	waap/custompageset_test.go
	waap/advancedrule_test.go
	waap/tag_test.go
	waap/organization_test.go
	waap/ipinfo_test.go
	iam/iam_test.go
	iam/apitoken_test.go
	iam/user_test.go
	fastedge/fastedge_test.go
	fastedge/template_test.go
	fastedge/secret_test.go
	fastedge/binary_test.go
	fastedge/statistic_test.go
	fastedge/app_test.go
	fastedge/applog_test.go
	fastedge/kvstore_test.go
	usage_test.go
	paginationauto_test.go
	paginationmanual_test.go
)

for PATHSPEC in "${TEST_PATHS[@]}"; do
    # Try to check out previous versions of the test files
    # with the current SDK.
    git checkout "$1" -- "${PATHSPEC}" 2>/dev/null || true
done

# Instead of running the tests, use the linter to check if an
# older test is no longer compatible with the latest SDK.
./scripts/lint
